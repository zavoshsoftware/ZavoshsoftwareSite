@model IEnumerable<Models.Comment>

@{
    ViewBag.Title = "نظرات";

    Layout = "~/Views/Shared/BackEndLayout/_BackEndLayout.cshtml";
}

<h2>@ViewBag.Title</h2>

@(Html.Kendo().Grid(Model)
                  .Name("Grid")
                  .Columns(columns =>
                      {
                          columns.Bound(model => model.Page.Title);
                          columns.Bound(model => model.Parent.Name);
                          columns.Bound(model => model.Name);
                          columns.Bound(model => model.Email);
                          columns.Bound(model => model.Body);
                          columns.Bound(model => model.IsActive);
                          columns.Bound(model => model.CreationDate);
                          columns.Bound(model => model.LastModificationDate);
                          columns.Bound(item => @item.Id).Title("دستورات").Filterable(false).Groupable(false)
                          .Template(@<text>
                            @Html.ActionLink("تایید", "Confirm", new { id = @item.Id }, new { @class = "k-button" })
                            @Html.ActionLink("عدم تایید", "NotConfirm", new { id = @item.Id }, new { @class = "k-button" })
                            @Html.ActionLink("حذف", "Delete", new { id = @item.Id }, new { @class = "k-button" })
                            @if (item.ParentId.ToString() != "")

                                        {
                                @Html.ActionLink("مشاهده پدر", "Index", new { id = @item.Id }, new { @class = "k-button" })
                                        }
                          
                        </text>).Width(200);
                      })
              //.ToolBar(toolbar =>
              //            {
              //                toolbar.Custom().Action("Create", "Comments").Text("افزودن");
              //            }
              //)
              .DataSource(dataSource => dataSource
                                          .Server()

                                          .Model(model => model.Id(item => item.Id))
                          )
)
